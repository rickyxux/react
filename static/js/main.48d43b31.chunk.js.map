{"version":3,"sources":["Table.js","Form.js","App.js","index.js"],"names":["TableHeader","TableBody","props","rows","characterData","map","row","index","name","job","onClick","removeCharacter","Table","Form","initialState","state","handleChange","event","target","value","setState","submitForm","handleSubmit","this","htmlFor","type","id","onChange","Component","App","characters","filter","character","i","className","ReactDOM","render","document","getElementById"],"mappings":"gOAEMA,EAAc,WAChB,OACI,gCACA,+BACI,sCACA,qCACA,8CAMNC,EAAY,SAACC,GACf,IAAMC,EAAOD,EAAME,cAAcC,KAAI,SAACC,EAAKC,GACvC,OACI,+BACI,6BAAKD,EAAIE,OACT,6BAAKF,EAAIG,MACT,6BACI,wBAAQC,QAAS,kBAAMR,EAAMS,gBAAgBJ,IAA7C,wBAJCA,MAWjB,OAAO,gCAAQJ,KAcJS,EAXD,SAACV,GAAW,IACfE,EAAkCF,EAAlCE,cAAeO,EAAmBT,EAAnBS,gBAEtB,OACI,kCACI,cAAC,EAAD,IACA,cAAC,EAAD,CAAWP,cAAeA,EAAeO,gBAAiBA,Q,OCEvDE,E,4MApCXC,aAAe,CACXN,KAAM,GACNC,IAAK,I,EAGTM,MAAQ,EAAKD,a,EAEbE,aAAe,SAACC,GAAW,IAAD,EACAA,EAAMC,OAArBV,EADe,EACfA,KAAMW,EADS,EACTA,MACb,EAAKC,SAAL,eACKZ,EAAOW,K,EAIhBE,WAAa,WACT,EAAKnB,MAAMoB,aAAa,EAAKP,OAC7B,EAAKK,SAAS,EAAKN,e,uDAGb,IAAD,EACeS,KAAKR,MAAlBP,EADF,EACEA,KAAMC,EADR,EACQA,IAEb,OACI,iCACI,uBAAOe,QAAQ,OAAf,kBACA,uBAAOC,KAAK,OAAOjB,KAAK,OAAOkB,GAAG,OAAOP,MAAOX,EAAMmB,SAAUJ,KAAKP,eAErE,uBAAOQ,QAAQ,MAAf,iBACA,uBAAOC,KAAK,OAAOjB,KAAK,MAAMkB,GAAG,MAAMP,MAAOV,EAAKkB,SAAUJ,KAAKP,eAElE,uBAAOS,KAAK,SAASN,MAAM,SAAST,QAASa,KAAKF,oB,GA/B/CO,aCiCJC,E,4MA9BXd,MAAQ,CACJe,WAAY,I,EAGhBnB,gBAAkB,SAACJ,GAAW,IACnBuB,EAAc,EAAKf,MAAnBe,WAEP,EAAKV,SAAS,CACVU,WAAYA,EAAWC,QAAO,SAACC,EAAWC,GACtC,OAAOA,IAAM1B,Q,EAKzBe,aAAe,SAACU,GACZ,EAAKZ,SAAS,CAACU,WAAW,GAAD,mBAAM,EAAKf,MAAMe,YAAjB,CAA6BE,O,uDAGhD,IACCF,EAAcP,KAAKR,MAAnBe,WACP,OACI,sBAAKI,UAAU,YAAf,UACI,cAAC,EAAD,CAAO9B,cAAe0B,EAAYnB,gBAAiBY,KAAKZ,kBAExD,cAAC,EAAD,CAAMW,aAAcC,KAAKD,sB,GAzBvBM,aCElBO,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.48d43b31.chunk.js","sourcesContent":["import React from 'react'\n\nconst TableHeader = () => {\n    return (\n        <thead>\n        <tr>\n            <th>Name</th>\n            <th>Job</th>\n            <th>Remove</th>\n        </tr>\n        </thead>\n    )\n}\n\nconst TableBody = (props) => {\n    const rows = props.characterData.map((row, index) => {\n        return (\n            <tr key={index}>\n                <td>{row.name}</td>\n                <td>{row.job}</td>\n                <td>\n                    <button onClick={() => props.removeCharacter(index)}>\n                        Delete\n                    </button>\n                </td>\n            </tr>\n        )\n    })\n    return <tbody>{rows}</tbody>\n}\n\nconst Table = (props) => {\n    const {characterData, removeCharacter} = props\n\n    return (\n        <table>\n            <TableHeader />\n            <TableBody characterData={characterData} removeCharacter={removeCharacter} />\n        </table>\n    )\n}\n\nexport default Table","import React, {Component} from 'react'\n\nclass Form extends Component {\n    initialState = {\n        name: '',\n        job: ''\n    }\n\n    state = this.initialState\n\n    handleChange = (event) => {\n        const {name, value} = event.target\n        this.setState({\n            [name]: value\n        })\n    }\n\n    submitForm = () => {\n        this.props.handleSubmit(this.state)\n        this.setState(this.initialState)\n    }\n\n    render() {\n        const {name, job} = this.state\n\n        return (\n            <form>\n                <label htmlFor=\"name\">Name</label>\n                <input type=\"text\" name=\"name\" id=\"name\" value={name} onChange={this.handleChange} />\n\n                <label htmlFor=\"job\">Job</label>\n                <input type=\"text\" name=\"job\" id=\"job\" value={job} onChange={this.handleChange} />\n\n                <input type=\"button\" value=\"Submit\" onClick={this.submitForm}/>\n            </form>\n        )\n    }\n}\n\nexport default Form","import React, {Component} from 'react'\nimport Table from './Table'\nimport Form from './Form'\n\nclass App extends Component {\n    state = {\n        characters: [],\n    }\n\n    removeCharacter = (index) => {\n        const {characters} = this.state\n\n        this.setState({\n            characters: characters.filter((character, i) => {\n                return i !== index\n            })\n        })\n    }\n\n    handleSubmit = (character) => {\n        this.setState({characters: [...this.state.characters, character]})\n    }\n\n    render() {\n        const {characters} = this.state\n        return (\n            <div className=\"container\">\n                <Table characterData={characters} removeCharacter={this.removeCharacter} />\n\n                <Form handleSubmit={this.handleSubmit} />\n            </div>\n        )\n    }\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}